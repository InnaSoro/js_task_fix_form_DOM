{"version":3,"sources":["scripts/main.js"],"names":["inputs","document","querySelectorAll","input","insertAdjacentHTML","id","name","placeholder","charAt","toUpperCase","slice","replace"],"mappings":";AAAA,aAWC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EATD,IASC,EATKA,EAASC,SAASC,iBAAiB,SAErBF,EAAAA,EAAAA,GAOnB,IAP2B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjBG,IAAAA,EAAiB,EAAA,MAC1BA,EAAMC,mBAAmB,cACWD,yCAAAA,OAAAA,EAAME,GAAOF,MAAAA,OAAAA,EAAMG,KADvD,iBAIAH,EAAMI,YAAcJ,EAAMG,KAAKE,OAAO,GAAGC,cACrCN,EAAMG,KAAKI,MAAM,GAAGC,QAAQ,iBAAkB,QACnD,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA","file":"main.12aab1d2.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst inputs = document.querySelectorAll('input');\n\nfor (const input of inputs) {\n  input.insertAdjacentHTML('beforebegin', `\n    <label class=\"field-label\" for=\"${input.id}\">${input.name}</label>\n  `);\n\n  input.placeholder = input.name.charAt(0).toUpperCase()\n    + input.name.slice(1).replace(/([A-Z][a-z]+)/g, ' $1');\n};\n"]}